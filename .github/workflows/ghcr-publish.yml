# .github/workflows/ghcr-publish.yml

name: Publish Docker image to GHCR

on:
  push:
    tags:
      - 'v*.*.*' # 오직 Git 태그 푸시 시에만 실행 (예: v0.0.1, v0.0.2)
  # branches: [ "main" ] # main 브랜치 푸시 트리거 제거 또는 주석 처리
  pull_request:
    branches: [ "main" ] # PR 시에는 빌드 테스트만 (푸시 안 함)
  workflow_dispatch:

jobs:
  build_and_push_to_ghcr:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Log in to GitHub Container Registry
      # 태그 푸시 시에만 로그인 및 푸시가 이루어지도록 함
      if: startsWith(github.ref, 'refs/tags/v')
      uses: docker/login-action@v3
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: Docker meta
      id: meta
      uses: docker/metadata-action@v5
      with:
        images: ghcr.io/${{ github.repository }}
        tags: |
          # Git 태그 vMajor.Minor.Patch (예: v0.0.1)에 대해
          # 1. Docker 태그 Major.Minor.Patch (예: 0.0.1) 생성
          type=semver,pattern={{version}}
          # 2. Docker 태그 Major.Minor (예: 0.0) 생성
          type=semver,pattern={{major}}.{{minor}}
          # 3. 항상 'latest' 태그도 함께 생성
          type=raw,value=latest
        # 중요: 위 설정은 Git 태그 푸시 시에만 이 워크플로우가 실행된다는 전제 하에 'latest'를 만듭니다.
        # 만약 main 브랜치 푸시도 다른 태그(예: 'edge')로 빌드하고 싶다면 on: branches 와 meta tags를 추가 조정해야 합니다.

    - name: Build and push Docker image to GHCR
      if: startsWith(github.ref, 'refs/tags/v') # 태그 푸시 시에만 실행
      uses: docker/build-push-action@v5
      with:
        context: .
        file: ./Dockerfile
        push: true # 태그 푸시이므로 항상 푸시
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}
        cache-from: type=gha
        cache-to: type=gha,mode=max